#!/usr/bin/env bash

# ref: http://blog.mro.name/2009/07/sane-batch-scan-workaroun/
# Use for loop to work around the issue with `--batch-prompt`
# $ scanimage --batch-start=45 --batch-count=16 --batch --batch-prompt --format=pnm --mode Color --resolution 300
# ...
# Scanning page 46
# scanimage: sane_start: Invalid argument

# Scan multipages document from flatbed source

# Usage:
# Scan in grayscale: `scan-flatbed Gray` or just `scan-flatbed`
# Scan in color: `scan-flatbed Color`

# default is grayscale
SCANMODE=${1:-Gray}

echo "========================Flatbed================================="
echo "Scanning mode is: $SCANMODE"

pre=doc-`date "+%Y-%m-%dT%H-%M"`
for ((i=1;i < 100;i++))
do
    dst=$pre-page$(printf %03d $i)
    scanimage -x 210 -y 297 --source Flatbed --mode "$SCANMODE" --format=tiff --progress --resolution 300 > $dst.tif

    echo "Place page no. $((i+1)) on the scanner."
    echo "Press RETURN to continue, q or Q + RETURN to quit."
    read key
    if [[ $key == "q" || $key == "Q" ]] ; then
        break
    fi
done

# make final tiff file
echo "Processing final output document..."
# convert "$pre-page"*.tif -deskew 40% -bordercolor black -border 1x1 -fuzz 10% -trim +repage -despeckle "$pre-final.tif"
convert "$pre-page"*.tif -deskew 40% -bordercolor black -border 1x1 -fuzz 10% -trim +repage -enhance -enhance -enhance -enhance -enhance -antialias -sharpen 0x2.0 "$pre-final.tif"

# for scanning photo
# convert "$pre-page"*.tif -deskew 40% -bordercolor black -border 1x1 -fuzz 10% -trim +repage "$pre-final.tif"

# for photo
# convert "$pre-page"*.tif -deskew 40% -bordercolor black -border 1x1 -fuzz 10% -trim +repage "$pre-final.tif"

# remove temp files
rm "$pre-page"*.tif 2> /dev/null

