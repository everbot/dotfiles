#!/bin/bash

# https://github.com/tungel/dotfiles

# kill all the bspc process first
kill -9 $(ps aux | grep bspc | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)

if [[ -e $TLPC ]]; then
    # for 4k monitor
    export PANEL_HEIGHT=30
else
    export PANEL_HEIGHT=18
fi

# For newly plugged in monitor to be recognized by bspwm, we must first run:
#   xrandr --output HDMI1 --mode 1920x1080
# then run:
#   ~/.config/bspwm/bspwmrc
num_mon=$(bspc query -M | wc -l)
if [ $num_mon -gt 1 ] ; then
    if [[ -e $TLPC ]]; then
        xrandr --output HDMI-0 --primary
        xrandr --output DVI-I-1 --right-of HDMI-0

        # trying to scale the low res monitor to match with the HiDPI monitor
        # (4k), but the result is not acceptable, the font is so blurry
        # scale 2x2 will make the whole screen black !!!
        # xrandr --output DVI-I-1 --mode 1920x1080 --scale 2.0005x2.0005 --right-of HDMI-0

        # give 3 desktops to the 1st monitor
        bspc monitor DVI-I-1 -d 1 2 3
        bspc config -m ^1 top_padding 10

        # the rest of the desktops are for 2nd monitor
        bspc monitor HDMI-0 -d 4 5 6 7 8 9 10
        bspc config -m ^2 top_padding 10
    else
        # for VirtualBox at work
        xrandr --output VGA-1 --primary
        xrandr --output VGA-2 --right-of VGA-1

        # allocate desktop for first monitor
        bspc monitor ^1 --reset-desktops 1 2 3
        bspc config -m ^1 top_padding 10

        # allocate desktop for second monitor
        bspc monitor ^2 --reset-desktops web 5 6 7 8 9 10
        bspc config -m ^2 top_padding 10
    fi
else
    bspc monitor ^1 --reset-desktops 1 2 3 4 5 6 7 8 9 10
    bspc config -m ^1 top_padding 10
fi


# move the focus to the main monitor
bspc monitor -f primary

bspc config split_ratio             0.50
bspc config border_width            1
bspc config top_padding             10
bspc config borderless_monocle      true
bspc config gapless_monocle         true
# bspc config focus_follows_pointer   false
# bspc config focus_by_distance       true
# bspc config auto_cancel             true
# bspc config normal_border_color     none
bspc config active_border_color     "#504339"
bspc config focused_border_color    "#ff8000"
# bspc config presel_border_color     none
# bspc config urgent_border_color     "#504339"
bspc config click_to_focus          true

#*******************************************************************************
# Rules
#*******************************************************************************
bspc rule -a Thunderbird desktop=^1

bspc rule -a Firefox desktop=^4

bspc rule -a "Foxit Reader" desktop=^5
bspc rule -a "PDFXCview.exe" desktop=^5

# for matlab figure: make the figure window floating by default
# use: xprop | grep WM_CLASS to get the class title
bspc rule -a sun-awt-X11-XFramePeer floating=on

bspc rule -a Steam desktop=^5 floating=on
#*******************************************************************************

# kill all panel scripts from bspwm directory such as ~/.config/bspwm/{panel-dzen2,panel.sh}
# OR the panel FIFO at /tmp/panel-fifo
kill -9 $(ps aux | grep -e "bspwm.*panel\|tmp/panel-fifo" | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)

# kill dzen2 and xtitle as well
kill -9 $(ps aux | grep dzen2 | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)
kill -9 $(ps aux | grep xtitle | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)

# run panel
~/.config/bspwm/panel.sh &
sleep 2; # wait for panel to show up first (bar or dzen2)


if [ $(pgrep -cx trayer) -gt 0 ] ; then
    # echo "Trayer already running!"
    # pkill trayer
    # killall trayer

    kill -9 $(ps aux | grep trayer | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)
fi

trayer --edge top --align right --SetDockType true \
        --SetPartialStrut true  \
        --expand true \
        --width 10 \
        --transparent true \
        --alpha 0 \
        --tint 0x000000 \
        --height $PANEL_HEIGHT &

# Update 2017-08-06: run dropbox inside docker container instead
# if [ $(pgrep -cx dropbox) -lt 1 ] ; then
#     if [[ -e $TLPC ]]; then
#         # dropboxd &
#         dropbox &
#     fi
# fi

# network manager applet icon
if [ $(pgrep -cx nm-applet) -gt 0 ] ; then
    kill -9 $(ps aux | grep nm-applet | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)
fi
# `which nm-applet` &
nm-applet &

